// protoc -I proto/ --go_out=plugin/types --go_opt=paths=source_relative --go-grpc_out=plugin/types --go-grpc_opt=paths=source_relative executor.proto
syntax = "proto3";

package proto;
option go_package = "github.com/THPTUHA/kairos/server/plugin/proto";

message ExecuteRequest {
    int64 task_id = 1;
    map<string,string > config = 2;
    uint32 status_server = 3;
}
  
message ExecuteResponse {
    bytes output = 1;
    string error = 2;
}

service Executor {
    rpc Execute (ExecuteRequest) returns (ExecuteResponse);
}

message StatusUpdateRequest {
    bytes output = 1;
    bool error = 2;
}

message StatusUpdateResponse {
    int64 r = 1;
}

message StatusInputRequest {
}

message StatusInputResponse {
    bytes input = 1;
}

enum LogType {
    DEBUG = 0;
    INFO = 1;
    ERROR = 2;
}

message StatusLogRequest {
    bytes msg = 1;
    LogType type = 2;
}

message StatusLogResponse {
}

service StatusHelper {
    rpc Update(StatusUpdateRequest) returns (StatusUpdateResponse);
    rpc Input(StatusInputRequest) returns (StatusInputResponse);
    rpc Log(StatusLogRequest) returns (StatusLogResponse);
}
  